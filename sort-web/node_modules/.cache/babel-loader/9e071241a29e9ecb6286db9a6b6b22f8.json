{"ast":null,"code":"var _jsxFileName = \"D:\\\\kuliahh\\\\aslab\\\\ca-irk\\\\sort-web\\\\src\\\\component\\\\UserInput.js\";\nimport React, { Component } from 'react';\nimport './UserInput.css';\nimport Hasil from '../component/Hasil';\n\nclass UserInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshPage = () => {\n      window.location.reload(true);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.numbers !== '') {\n        fetch(\"http://localhost:5000/sorting-web\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            'numbers': this.state.numbers,\n            'algo': this.state.algo\n          })\n        }).then(e => e.json()).then(data => this.setState({\n          hasil: data.data\n        })).catch(err => alert(\"Unvalid numbers :( Please enter the valid one !\"));\n        this.kompleksitas;\n      } else {\n        alert(\"Your not entering any numbers yet !\");\n      }\n    };\n\n    this.handleChangeAlgo = event => {\n      event.preventDefault();\n      this.setState({\n        algo: event.target.value\n      });\n    };\n\n    this.handleChangeNumber = event => {\n      event.preventDefault();\n      this.setState({\n        numbers: event.target.value\n      });\n    };\n\n    this.kompleksitas = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"header-komp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, \"Kompleksitas Waktu Algoritma\"), \"if (this.state.algo==\\\"BS\\\") \", /*#__PURE__*/React.createElement(\"p\", {\n        className: \"komp-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"O(n^2)\"), \"else\", /*#__PURE__*/React.createElement(\"p\", {\n        className: \"komp-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"O(n log n)\"));\n    };\n\n    this.state = {\n      algo: \"BS\",\n      numbers: \"\",\n      hasil: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"body\", {\n      className: \"App-insert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"header-insert-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"Insert Your Numbers\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"num-block\",\n      type: \"text\",\n      placeholder: \"example :1,2,3,4,5\",\n      onChange: this.handleChangeNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"body\", {\n      className: \"App-choose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"header-algo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Choose The Algorithm\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"select-block\",\n      onChange: this.handleChangeAlgo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"BS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \"Bubble Sort\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"MS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, \"Merge Sort\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Get the Result\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, this.state.hasil.map(hasilSorting => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Hasil, {\n      hasilSort: hasilSorting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"try-again-button\",\n      onClick: this.refreshPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"Try Again\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default UserInput;","map":{"version":3,"sources":["D:/kuliahh/aslab/ca-irk/sort-web/src/component/UserInput.js"],"names":["React","Component","Hasil","UserInput","constructor","props","refreshPage","window","location","reload","handleSubmit","event","preventDefault","state","numbers","fetch","method","headers","body","JSON","stringify","algo","then","e","json","data","setState","hasil","catch","err","alert","kompleksitas","handleChangeAlgo","target","value","handleChangeNumber","render","map","hasilSorting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './UserInput.css';\r\nimport Hasil from '../component/Hasil'\r\n\r\nclass UserInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            algo: \"BS\",\r\n            numbers: \"\",\r\n            hasil: []\r\n        }\r\n    }\r\n    refreshPage = () => {\r\n        window.location.reload(true);\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.numbers !== '') {\r\n            fetch(\"http://localhost:5000/sorting-web\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    'numbers': this.state.numbers,\r\n                    'algo': this.state.algo\r\n                })\r\n            }).then(e => e.json()).then(data => this.setState({ hasil: data.data })).catch((err) => alert(\"Unvalid numbers :( Please enter the valid one !\"))\r\n            this.kompleksitas\r\n        } else {\r\n            alert(\"Your not entering any numbers yet !\")\r\n        }\r\n    }\r\n\r\n    handleChangeAlgo = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            algo: event.target.value\r\n        });\r\n    }\r\n    handleChangeNumber = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            numbers: event.target.value\r\n        })\r\n\r\n    }\r\n    kompleksitas = () => {\r\n        return (\r\n            <div>\r\n                <p className=\"header-komp\">Kompleksitas Waktu Algoritma</p>\r\n                            if (this.state.algo==\"BS\") {\r\n                    <p className=\"komp-text\">O(n^2)</p>\r\n                }else{\r\n                    <p className=\"komp-text\">O(n log n)</p>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* masukkan angka-angka untuk diolah */}\r\n                <div>\r\n                    <body className=\"App-insert\">\r\n                        <p className=\"header-insert-number\">Insert Your Numbers</p>\r\n                        <form>\r\n                            <p>\r\n                                <input\r\n                                    className=\"num-block\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"example :1,2,3,4,5\"\r\n                                    onChange={this.handleChangeNumber}\r\n                                />\r\n                            </p>\r\n                        </form>\r\n                    </body>\r\n                </div>\r\n                {/* pilih algoritma sorting */}\r\n                <div>\r\n                    <body className=\"App-choose\">\r\n                        <p className=\"header-algo\">Choose The Algorithm</p>\r\n                        <form>\r\n                            <label>\r\n                                <select className=\"select-block\" onChange={this.handleChangeAlgo} >\r\n                                    <option value=\"BS\">Bubble Sort</option>\r\n                                    <option value=\"MS\">Merge Sort</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                        <br></br>\r\n                        <div>\r\n                            <button className=\"submit-button\" onClick={this.handleSubmit}>Get the Result</button>\r\n                        </div>\r\n\r\n\r\n                        {/* nampilin hasil */}\r\n                        <div>\r\n                            {this.state.hasil.map((hasilSorting) => (\r\n                                <div>\r\n                                    <Hasil hasilSort={hasilSorting} />\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n                        {/* button try again */}\r\n                        <br></br>\r\n\r\n                        <div>\r\n                            <button className=\"try-again-button\" onClick={this.refreshPage}>Try Again</button>\r\n                        </div>\r\n                        <br></br>\r\n\r\n                    </body>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInput;\r\n"]},"metadata":{},"sourceType":"module"}