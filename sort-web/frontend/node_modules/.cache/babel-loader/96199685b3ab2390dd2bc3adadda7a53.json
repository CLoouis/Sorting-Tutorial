{"ast":null,"code":"var _jsxFileName = \"D:\\\\kuliahh\\\\aslab\\\\ca-irk\\\\sort-web\\\\src\\\\component\\\\UserInput.js\";\nimport React, { Component } from 'react';\nimport './UserInput.css';\nimport Hasil from '../component/Hasil';\n\nclass UserInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      if (this.state.numbers != '') {\n        fetch(\"http://localhost:5000/sorting-web\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            'numbers': this.state.numbers,\n            'algo': this.state.algo\n          })\n        }).then(e => e.json()).then(data => this.setState({\n          hasil: data.data\n        })).catch(err => alert(err));\n        console.log(this.state.hasil);\n      } else {\n        alert(\"masukin angkanya geng!\");\n      }\n    };\n\n    this.refreshPage = () => {\n      window.location.reload(false);\n    };\n\n    this.handleChangeAlgo = event => {\n      event.preventDefault();\n      this.setState({\n        algo: event.target.value\n      });\n    };\n\n    this.handleChangeNumber = event => {\n      event.preventDefault();\n      this.setState({\n        numbers: event.target.value\n      });\n    };\n\n    this.state = {\n      algo: \"BS\",\n      numbers: \"\",\n      hasil: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"body\", {\n      className: \"App-insert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 40,\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Insert ur number\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"example :1,2,3,4,5\",\n      onChange: this.handleChangeNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"body\", {\n      className: \"App-choose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 40,\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Choose ur algo\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        blockSize: 20\n      },\n      onChange: this.handleChangeAlgo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"BS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, \"Bubble Sort\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"MS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, \"Merge Sort\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: '#3593B5',\n        fontSize: 15,\n        fontWeight: \"bold\",\n        blockSize: 20\n      },\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, this.state.hasil.map(hasilSorting => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Hasil, {\n      hasilSort: hasilSorting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default UserInput;","map":{"version":3,"sources":["D:/kuliahh/aslab/ca-irk/sort-web/src/component/UserInput.js"],"names":["React","Component","Hasil","UserInput","constructor","props","handleSubmit","state","numbers","fetch","method","headers","body","JSON","stringify","algo","then","e","json","data","setState","hasil","catch","err","alert","console","log","refreshPage","window","location","reload","handleChangeAlgo","event","preventDefault","target","value","handleChangeNumber","render","fontSize","textAlign","blockSize","backgroundColor","fontWeight","map","hasilSorting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './UserInput.css';\r\nimport Hasil from '../component/Hasil'\r\n\r\nclass UserInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            algo: \"BS\",\r\n            numbers: \"\",\r\n            hasil: []\r\n        }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.numbers != '') {\r\n            fetch(\"http://localhost:5000/sorting-web\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    'numbers': this.state.numbers,\r\n                    'algo': this.state.algo\r\n                })\r\n            }).then(e => e.json()).then(data => this.setState({ hasil: data.data })).catch((err) => alert(err))\r\n            console.log(this.state.hasil)\r\n        } else {\r\n            alert(\"masukin angkanya geng!\")\r\n        }\r\n    }\r\n    refreshPage = () => {\r\n        window.location.reload(false);\r\n    }\r\n    handleChangeAlgo = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            algo: event.target.value\r\n        });\r\n    }\r\n    handleChangeNumber = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            numbers: event.target.value\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* masukkan angka-angka untuk diolah */}\r\n                <div>\r\n                    <body className=\"App-insert\">\r\n                        <p style={{ fontSize: 40, textAlign: \"center\" }}>Insert ur number</p>\r\n                        <form>\r\n                            <p>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"example :1,2,3,4,5\"\r\n                                    onChange={this.handleChangeNumber}\r\n                                />\r\n                            </p>\r\n                        </form>\r\n                    </body>\r\n                </div>\r\n                {/* pilih algoritma sorting */}\r\n                <div>\r\n                    <body className=\"App-choose\">\r\n                        <p style={{ fontSize: 40, textAlign: \"center\" }}>Choose ur algo</p>\r\n                        <form>\r\n                            <label>\r\n                                <select style={{ blockSize: 20 }} onChange={this.handleChangeAlgo} >\r\n                                    <option value=\"BS\">Bubble Sort</option>\r\n                                    <option value=\"MS\">Merge Sort</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n\r\n                        <div>\r\n                            <button style={{ backgroundColor: '#3593B5', fontSize: 15, fontWeight: \"bold\", blockSize: 20 }} onClick={this.handleSubmit}>Submit</button>\r\n                        </div>\r\n                    </body>\r\n                </div>\r\n                {/* nampilin hasil */}\r\n                <div>\r\n                    {this.state.hasil.map((hasilSorting) => (\r\n                        <div>\r\n                            <Hasil hasilSort={hasilSorting} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInput;\r\n"]},"metadata":{},"sourceType":"module"}